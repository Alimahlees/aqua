#!/usr/bin/python3 -u

import sys, errno, time, random, argparse

sys.stdin.close()

parser = argparse.ArgumentParser(description="Netdata Module")
parser.add_argument('update_every', type=int, nargs='?', help='update frequency in seconds')
args = parser.parse_args()

update_every = 1

if args.update_every != None:
    update_every = args.update_every

update_every *= 1000
get_millis = lambda: int(round(time.time() * 1000))

try:
    sys.stdout.write('CHART aqua.basic "Basic Title" "Basic Unit" "Basic Family" "Basic Category" line 100000 %s\n' % int(update_every / 1000))
    sys.stdout.write('DIMENSION BasicValue "basic random number" absolute 1 1\n')
    sys.stdout.flush()
except IOError as e:
    sys.stderr.write("Failed to send.")
    sys.exit(0)

count = 0
last_run = next_run = now = get_millis()

while True:
    if next_run <= now:
        count += 1
        value1 = random.randint(0,100)
        now = get_millis()

        while next_run <= now:
            next_run += update_every

        dt = now - last_run
        last_run = now

        if count == 1:
            dt = 0

        try:
            sys.stdout.write('BEGIN aqua.basic %s\n' % (dt * 1000))
            sys.stdout.write('SET BasicValue = %s\n' % value1)
            sys.stdout.write('END\n')
            sys.stdout.flush()
        except IOError as e:
            sys.stdout.write("Failed to send.\n")
            sys.exit(0)

    time.sleep(update_every / 1000 / 10)
    now = get_millis()







